-- PLSQL
-- Create table for Devil Fruits
CREATE TABLE devil_fruits (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Devil Fruits table
INSERT INTO devil_fruits (power, subpower, description) VALUES 
('Devil Fruits', 'Paramecia', 'Grants unique abilities, not limited to physical transformations.'),
('Devil Fruits', 'Zoan', 'Allows the user to transform into an animal and gain its abilities.'),
('Devil Fruits', 'Logia', 'Enables the user to become a natural element and control it.'),
('Devil Fruits', 'Mythical Zoan', 'Grants the user abilities of mythical creatures like phoenixes or dragons.'),
('Devil Fruits', 'Ancient Zoan', 'Allows transformations into extinct creatures such as dinosaurs.'),
('Devil Fruits', 'Awakened Paramecia', 'Enhances the user’s abilities to influence their surroundings.'),
('Devil Fruits', 'Awakened Zoan', 'Greatly boosts the user’s physical strength and recovery rate.'),
('Devil Fruits', 'Awakened Logia', 'Allows near-total mastery of the respective natural element.'),
('Devil Fruits', 'Special Paramecia', 'Functions like a Logia but categorized as Paramecia.'),
('Devil Fruits', 'Artificial Zoan', 'Synthetic fruits created by science, such as SMILE fruits.');
('Devil Fruits', 'Elemental Paramecia', 'Paramecia fruits granting powers related to natural forces but not classified as Logia.'),
('Devil Fruits', 'Beastial Hybrid Zoan', 'Allows the user to take on combined features of multiple animals.'),
('Devil Fruits', 'Marine Zoan', 'Grants transformations into aquatic creatures while overcoming water-related weaknesses.'),
('Devil Fruits', 'Chimera Zoan', 'Provides the ability to transform into a mythical hybrid of multiple animals.'),
('Devil Fruits', 'Compound Logia', 'Grants control over multiple related natural elements, like ash and fire.'),
('Devil Fruits', 'Etherial Logia', 'Enables the user to embody intangible forces like light or shadows.'),
('Devil Fruits', 'Dual-Type Devil Fruit', 'A rare anomaly combining traits of two distinct Devil Fruit types.'),
('Devil Fruits', 'Floral Paramecia', 'Grants abilities to control or grow plants with unique properties.'),
('Devil Fruits', 'Gigantification Paramecia', 'Allows the user to alter their size, growing or shrinking at will.'),
('Devil Fruits', 'Energy Paramecia', 'Enables manipulation of raw energy forms like electricity or heat.'),
('Devil Fruits', 'Tactical Zoan', 'Grants the user forms specialized for combat and strategy.'),
('Devil Fruits', 'Hybrid Ancient Zoan', 'Enables transformations into hybrids of ancient creatures.'),
('Devil Fruits', 'Celestial Mythical Zoan', 'Grants abilities inspired by celestial beings or gods.'),
('Devil Fruits', 'Awakened Mythical Zoan', 'Greatly amplifies the mythical abilities of the user.'),
('Devil Fruits', 'Temporal Paramecia', 'Allows manipulation of time in limited ways.'),
('Devil Fruits', 'Spatial Paramecia', 'Grants control over spatial dimensions, like teleportation or portals.'),
('Devil Fruits', 'Magnetism Paramecia', 'Provides control over magnetic forces and metallic objects.'),
('Devil Fruits', 'Golem Zoan', 'Allows transformations into elemental constructs like stone or clay golems.'),
('Devil Fruits', 'Synthetic Paramecia', 'Artificial Paramecia fruits created through advanced technology.'),
('Devil Fruits', 'Energy Logia', 'Enables mastery over energy-based elements like plasma or solar rays.')
('Devil Fruits', 'Plot Paramecia', 'Grants the user godlike abilities to alter reality, control fate, and reshape the world like a black-and-white canvas. The user’s appearance resembels a fish.');

-- Create table for Haki
CREATE TABLE haki (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Haki table
INSERT INTO haki (power, subpower, description) VALUES 
('Haki', 'Kenbunshoku Haki', 'Allows the user to sense the presence and emotions of others.'),
('Haki', 'Busoshoku Haki', 'Enables the user to create invisible armor around themselves.'),
('Haki', 'Haoshoku Haki', 'Grants the user the ability to exert their will over others.'),
('Haki', 'Advanced Kenbunshoku Haki', 'Allows the user to briefly see into the future.'),
('Haki', 'Advanced Busoshoku Haki', 'Enables emission of Haki to attack from a distance.'),
('Haki', 'Haoshoku Haki Infusion', 'Permits the user to infuse conqueror’s Haki into attacks.'),
('Haki', 'Observation Range Expansion', 'Significantly increases the range of sensing.'),
('Haki', 'Haki Endurance', 'The ability to use Haki for extended periods.');

-- Create table for Martial Arts
CREATE TABLE martial_arts (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Martial Arts table
INSERT INTO martial_arts (power, subpower, description) VALUES 
('Martial Arts', 'Iron Body Technique', 'A defensive style that hardens the body to withstand heavy attacks.'),
('Martial Arts', 'Sky Walk', 'An acrobatic technique allowing movement through the air.'),
('Martial Arts', 'Finger Spear', 'A precision-based style using fingers as piercing weapons.'),
('Martial Arts', 'Air Slash', 'A technique that generates cutting waves of air with a weapon or motion.'),
('Martial Arts', 'Paper Art', 'A dodging style that enhances flexibility and fluid movement.'),
('Martial Arts', 'Storm Leg', 'A powerful kicking technique that creates slicing shockwaves.'),
('Martial Arts', 'Water Stream Flow', 'A flowing style focusing on redirecting the force of an opponent.'),
('Martial Arts', 'Whirlpool Strike', 'A spinning attack that generates a powerful vortex of energy.'),
('Martial Arts', 'Shatter Fist', 'A striking style that targets and breaks through defenses.'),
('Martial Arts', 'Thunder Palm', 'A palm-based technique that delivers shockwave-like impacts.'),
('Martial Arts', 'Flame Fist', 'A fiery technique that combines heat and striking force.'),
('Martial Arts', 'Crimson Wave', 'A blade-based style focusing on swift, fluid movements.'),
('Martial Arts', 'Silent Step', 'A stealth technique that enables nearly silent movements.'),
('Martial Arts', 'Shadow Fang', 'A style focused on rapid, precision strikes targeting weak points.'),
('Martial Arts', 'Stone Crusher', 'A style using overwhelming force to crush through obstacles.'),
('Martial Arts', 'Ripple Flow', 'A technique that creates waves of energy through rhythmic movements.'),
('Martial Arts', 'Heaven’s Ascent', 'An aerial combat style emphasizing acrobatics and high-speed attacks.'),
('Martial Arts', 'Storm Surge', 'A water-based style that delivers crashing, overwhelming strikes.'),
('Martial Arts', 'Blazing Edge', 'A sword-fighting technique that combines speed and fiery strikes.'),
('Martial Arts', 'Earth Shatter', 'A ground-focused style that uses stomps and shockwaves.'),
('Martial Arts', 'Ice Fang', 'A cold-focused technique delivering chilling, precise strikes.'),
('Martial Arts', 'Whirlwind Claw', 'A spinning claw technique that generates slicing winds.'),
('Martial Arts', 'Phoenix Strike', 'A fiery aerial technique that combines speed and impact.'),
('Martial Arts', 'Serpent Coil', 'A grappling style focusing on coiling and immobilizing the opponent.'),
('Martial Arts', 'Iron Grip', 'A style focused on overwhelming strength and grappling techniques.'),
('Martial Arts', 'Lightning Step', 'A high-speed movement technique leaving afterimages.'),
('Martial Arts', 'Wave Blade', 'A sword technique that delivers slashing strikes resembling ocean waves.'),
('Martial Arts', 'Moonlit Dance', 'A graceful combat style emphasizing fluid, unpredictable movements.'),
('Martial Arts', 'Meteor Kick', 'A devastating aerial kicking technique with tremendous force.'),
('Martial Arts', 'Thunder Clap', 'A hand-based style that delivers concussive, shockwave attacks.'),
('Martial Arts', 'Steel Fang', 'A biting combat style with hardened, piercing strikes.'),
('Martial Arts', 'Blade Tempest', 'A technique using rapid spinning strikes to create a storm of slashes.'),
('Martial Arts', 'Dragon Roar', 'A striking style that generates powerful shockwaves resembling a roar.'),
('Martial Arts', 'Frost Palm', 'A cold-based style delivering freezing strikes to immobilize opponents.'),
('Martial Arts', 'Solar Strike', 'A heat-based combat style combining speed and precision.'),
('Martial Arts', 'Twilight Fang', 'A balanced style blending power and speed in unison.'),
('Martial Arts', 'Iron Wave', 'A technique delivering overwhelming force like a crashing wave.'),
('Martial Arts', 'Lunar Flow', 'A calm, flowing style emphasizing defense and counterattacks.'),
('Martial Arts', 'Blizzard Blade', 'A sword technique creating icy slashes with a chilling edge.'),
('Martial Arts', 'Tempest Spin', 'A spinning attack that generates wind-based shockwaves.'),
('Martial Arts', 'Ocean Current Strike', 'A technique that mimics the force of powerful ocean currents.'),
('Martial Arts', 'Piercing Howl', 'A shockwave technique delivering sonic bursts.'),
('Martial Arts', 'Silent Edge', 'A stealthy blade style focusing on precision and surprise attacks.'),
('Martial Arts', 'Burning Spiral', 'A spinning technique that generates fiery energy for attacks.'),
('Martial Arts', 'Shocking Claw', 'A claw-based style delivering electrified strikes.'),
('Martial Arts', 'Vortex Spear', 'A spear-fighting technique creating spiraling wind attacks.'),
('Martial Arts', 'Crushing Tide', 'A water-based style using heavy, overwhelming strikes.'),
('Martial Arts', 'Storm Fist', 'A rapid, forceful punching style that mimics a thunderstorm.'),
('Martial Arts', 'Eclipse Fang', 'A shadowy style that emphasizes speed and evasion.'),
('Martial Arts', 'Sky Breaker', 'An aerial style that combines high-altitude strikes with overwhelming force.')
('Martial Arts', 'Sea Serpent Slash', 'A sword technique mimicking the unpredictable movements of a sea serpent.'),
('Martial Arts', 'Cyclone Kick', 'A spinning kick that generates powerful wind-based shockwaves.'),
('Martial Arts', 'Earthquake Fist', 'A striking style that creates tremors upon impact.'),
('Martial Arts', 'Sky Piercer', 'An aerial combat technique focused on high-altitude attacks.'),
('Martial Arts', 'Tidal Strike', 'A water-based technique that mimics the surging force of a tidal wave.'),
('Martial Arts', 'Cloud Step', 'A movement technique that allows fluid and evasive actions in midair.'),
('Martial Arts', 'Storm Fang', 'A rapid, claw-based style that generates slicing winds.'),
('Martial Arts', 'Volcanic Fist', 'A striking technique that combines intense heat with destructive power.'),
('Martial Arts', 'Frostbite Kick', 'A chilling kick-based style that freezes opponents on impact.'),
('Martial Arts', 'Whirlpool Slash', 'A blade technique that creates a spiraling vortex of energy.'),
('Martial Arts', 'Thunderbolt Palm', 'A shockwave-focused technique with electrifying force.'),
('Martial Arts', 'Glacier Claw', 'A claw-based style that delivers icy strikes, freezing targets.'),
('Martial Arts', 'Steel Cyclone', 'A spinning style that combines overwhelming force with defensive capability.'),
('Martial Arts', 'Dragon Tail Sweep', 'A sweeping attack resembling the powerful motion of a dragon’s tail.'),
('Martial Arts', 'Lightning Fang', 'A rapid claw technique infused with electrical energy.'),
('Martial Arts', 'Crimson Hurricane', 'A blade technique that generates a fiery whirlwind.'),
('Martial Arts', 'Meteor Palm', 'A striking style delivering heavy, earth-shaking impacts.'),
('Martial Arts', 'Serpent Strike', 'A swift, precise style with movements resembling a snake’s attack.'),
('Martial Arts', 'Eruption Stomp', 'A ground-based technique that creates explosive shockwaves.'),
('Martial Arts', 'Wind Razor', 'A high-speed sword style that creates sharp, slicing winds.');

-- Create table for Weather Control
CREATE TABLE weather_control (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Weather Control table
INSERT INTO weather_control (power, subpower, description) VALUES 
('Weather Control', 'Clima-Tact', 'Weapon that manipulates weather.'),
('Weather Control', 'Thunder Lance Tempo', 'Generates a powerful lightning strike.'),
('Weather Control', 'Cyclone Burst', 'Creates a massive tornado-like attack.'),
('Weather Control', 'Mirage Tempo', 'Allows to create optical illusions with weather.');


-- Create table for Rokushiki
CREATE TABLE rokushiki (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Rokushiki table
INSERT INTO rokushiki (power, subpower, description) VALUES 
('Rokushiki', 'Soru', 'Super speed technique.'),
('Rokushiki', 'Geppo', 'Allows the user to walk on air.'),
('Rokushiki', 'Tekkai', 'Defensive technique that hardens the body.'),
('Rokushiki', 'Shigan', 'Finger gun attack technique.'),
('Rokushiki', 'Rankyaku', 'Air blade attack.'),
('Rokushiki', 'Kami-e', 'Dodging technique through flexibility.'),
('Rokushiki', 'Rokuogan', 'A powerful energy-based finishing move.');

-- Create table for Cyborg Modifications
CREATE TABLE cyborg_modifications (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Cyborg Modifications table
INSERT INTO cyborg_modifications (power, description) VALUES 
('Cyborg Modifications', 'Enhancements used by Franky and Pacifistas for combat and defense.'),
('Cyborg Modifications', 'Laser Beams', 'Weaponized laser attacks.'),
('Cyborg Modifications', 'Steel Plating', 'Enhanced defense through metal plating.');

-- Create table for Giant Strength
CREATE TABLE giant_strength (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Giant Strength table
INSERT INTO giant_strength (power, description) VALUES 
('Giant Strength', 'Natural strength due to massive size.'),
('Giant Strength', 'Enhanced Physical Prowess', 'Allows incredible feats of power.');

-- Create table for Vinsmoke Germa Technology
CREATE TABLE vinsmoke_germa (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Vinsmoke Germa Technology table
INSERT INTO vinsmoke_germa (power, description) VALUES 
('Vinsmoke Germa Technology', 'Raid Suits grant superhuman abilities.'),
('Vinsmoke Germa Technology', 'Electrified Combat Suits', 'Shock-resistant armors with electric combat features.');


-- Create table for Minks' Sulong Form
CREATE TABLE minks_sulong (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Minks' Sulong Form table
INSERT INTO minks_sulong (power, description) VALUES 
('Minks'' Sulong Form', 'Powerful transformation during full moon.'),
('Minks'' Sulong Form', 'Enhanced Combat Abilities', 'Unleashes incredible speed and strength.');


-- Create table for Seastone
CREATE TABLE seastone (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Seastone table
INSERT INTO seastone (power, description) VALUES 
('Seastone', 'Nullifies Devil Fruit powers, used in weapons and restraints.'),
('Seastone', 'Weapon Enhancement', 'Grants weapons anti-Devil Fruit properties.');

-- Create table for Weapons and Tools
CREATE TABLE weapons_tools (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    subpower VARCHAR2(50),
    description VARCHAR2(255)
);

-- Insert data into Weapons and Tools table
INSERT INTO weapons_tools (power, subpower, description) VALUES 
('Weapons and Tools', 'Meito', 'Legendary swords with extraordinary power.'),
('Weapons and Tools', 'Cursed Blades', 'Swords with curses but great power.'),
('Weapons and Tools', 'Santoryu', 'Three-Sword Style used by Zoro.'),
('Weapons and Tools', 'Ryou', 'Advanced Armament Haki.'),
('Weapons and Tools', 'Black Blade', 'Sword permanently coated in Haki.');
('Weapons and Tools', 'Pluton', 'Ancient warship with destructive capabilities.'),
('Weapons and Tools', 'Poseidon', 'Control and communicate with Sea Kings.'),
('Weapons and Tools', 'Uranus', 'Mysterious ancient weapon related to the sky.'),
('Weapons and Tools', 'Ancient Weapon Components', 'Relics used to construct ancient weapons.');


-- Create table for Race-Specific Powers
CREATE TABLE race_specific_powers (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Race-Specific Powers table
INSERT INTO race_specific_powers (power, description) VALUES 
('Fish-Men/Merfolk', 'Can breathe underwater and swim at high speeds.'),
('Fish-Men/Merfolk', 'Possess incredible physical strength, especially underwater.'),
('Fish-Men/Merfolk', 'Can communicate with sea creatures using specific sounds.'),
('Fish-Men/Merfolk', 'Capable of performing Fish-Man Karate for devastating water-based attacks.'),
('Fish-Men/Merfolk', 'Able to manipulate water currents for powerful strikes.'),
('Minks', 'Can generate electricity using Electro.'),
('Minks', 'Exhibit heightened physical capabilities under normal conditions.'),
('Minks', 'Can transform into Sulong form under the full moon, greatly amplifying their combat abilities.'),
('Minks', 'Possess sharp claws and enhanced agility.'),
('Minks', 'Extremely skilled in hand-to-hand combat and swordsmanship.'),
('Lunarians', 'Generate fire and possess extreme durability.'),
('Lunarians', 'Can create flames on their back, which they can control for offense or defense.'),
('Lunarians', 'Have immense physical strength and resilience to most physical and elemental attacks.'),
('Lunarians', 'Survive in any harsh environment, including extreme heat or cold.'),
('Oni', 'Known for great physical power.'),
('Oni', 'Possess enhanced durability and natural fighting instincts.'),
('Oni', 'Capable of wielding massive weapons with ease.'),
('Oni', 'Have an innate ability to dominate in battle through sheer brute force.'),
('Skypieans', 'Possess small wings on their back and use Dial technology for combat and travel.'),
('Skypieans', 'Able to produce Milky Dials to create paths in the sky.'),
('Shandians', 'Exceptional warriors with great combat skills, especially with spears and Dial weapons.'),
('Birkans', 'Skilled engineers who utilize advanced technology, such as automata.'),
('Giants', 'Massive size gives them extraordinary physical strength.'),
('Giants', 'Have exceptional stamina and resilience in battle.'),
('Giants', 'Capable of using massive weapons that no other race can wield.'),
('Giants', 'Longevity allows them to live for hundreds of years.'),
('Dwarves (Tontattas)', 'Incredibly fast and agile, despite their small size.'),
('Dwarves (Tontattas)', 'Possess surprising strength relative to their size.'),
('Dwarves (Tontattas)', 'Skilled at cultivating and harvesting rare plants.'),
('Dwarves (Tontattas)', 'Naturally stealthy, making them excellent spies.'),
('Kaidou’s Beasts', 'Some Oni-like races possess the ability to transform into hybrid or animal forms.'),
('Three-Eyed Tribe', 'When awakened, they can hear the Voice of All Things and interpret Poneglyphs.'),
('Three-Eyed Tribe', 'Possess heightened intelligence and observation abilities.'),
('Longarm Tribe', 'Have elongated arms with additional joints, enhancing their reach in combat.'),
('Longarm Tribe', 'Possess significant physical strength and flexibility.'),
('Longleg Tribe', 'Have exceptionally long legs, giving them powerful kicks and enhanced mobility.'),
('Longleg Tribe', 'Skilled in leg-based combat techniques.'),
('Snakenecks', 'Possess long, flexible necks for unique combat and movement strategies.'),
('Snakenecks', 'Enhanced vision and reaction speed due to their unique anatomy.'),
('Wotans', 'Hybrid offspring of Fish-Men and Giants, combining both races’ immense strength and underwater abilities.'),
('Kumate Tribe', 'Savage warriors skilled in ambush tactics and tribal combat styles.'),
('Humans', 'Break the fourth wall with unique awareness, often attributed to plot significance.'),
('Humans', 'Prophecy bearers whose predictions often manifest as truth.');


-- Create table for Ancient Weapons
CREATE TABLE ancient_weapons (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Ancient Weapons table
INSERT INTO ancient_weapons (power, description) VALUES 
('Pluton', 'Ancient warship with destructive capabilities.'),
('Poseidon', 'Control and communicate with Sea Kings.'),
('Uranus', 'Mysterious ancient weapon related to the sky.');

-- Create table for Voice of All Things
CREATE TABLE voice_of_all_things (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    power VARCHAR2(50) NOT NULL,
    description VARCHAR2(255)
);

-- Insert data into Voice of All Things table
INSERT INTO voice_of_all_things (power, description) VALUES 
('Voice of All Things', 'Ability to hear the voice of living creatures and objects.'),
('Voice of All Things', 'Ancient Language Interpretation', 'Allows understanding of Poneglyphs.');


COMMIT;


-- See Tables
SELECT * FROM devil_fruits;
SELECT * FROM haki;
SELECT * FROM martial_arts;
SELECT * FROM weather_control;
SELECT * FROM rokushiki;
SELECT * FROM weapons_tools;
SELECT * FROM cyborg_modifications;
SELECT * FROM giant_strength;
SELECT * FROM vinsmoke_germa;
SELECT * FROM minks_sulong;
SELECT * FROM seastone;
SELECT * FROM ancient_weapons;
SELECT * FROM voice_of_all_things;


CREATE OR REPLACE PROCEDURE create_power_connections AS
BEGIN
    -- Clear existing connections to avoid duplicates
    DELETE FROM power_connections;

    -- Haki Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Haoshoku Haki', 'Kenbunshoku Haki', 'Enhances perception and control, allowing the user to sense others.', 5);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Haoshoku Haki', 'Busoshoku Haki', 'Strengthens physical attacks, making them more impactful.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Kenbunshoku Haki', 'Busoshoku Haki', 'Allows for defensive maneuvers by sensing incoming attacks.', 3);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Advanced Kenbunshoku Haki', 'Kenbunshoku Haki', 'Improves future sight, allowing the user to anticipate movements.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Advanced Busoshoku Haki', 'Busoshoku Haki', 'Increases attack range and power, enabling long-distance strikes.', 4);

    -- Devil Fruit Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Paramecia', 'Logia', 'Logia fruits are often considered superior due to elemental control and intangibility.', 5);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Zoan', 'Paramecia', 'Zoan fruits provide physical enhancements and transformation abilities.', 3);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Mythical Zoan', 'Zoan', 'Mythical Zoan fruits provide unique abilities and legendary transformations.', 5);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Awakened Paramecia', 'Paramecia', 'Awakening enhances Paramecia abilities, allowing for greater influence over surroundings.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Awakened Zoan', 'Zoan', 'Awakening boosts physical capabilities and recovery rates.', 4);

    -- Martial Arts Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Iron Body Technique', 'Tekkai', 'Both enhance physical defense, making the user more resilient.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Storm Leg', 'Air Slash', 'Combines speed and cutting force for devastating attacks.', 3);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Thunder Palm', 'Shatter Fist', 'Combines shockwave and striking force for powerful impacts.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Water Stream Flow', 'Paper Art', 'Both emphasize fluid movement and evasion techniques.', 3);

    -- Weather Control Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Clima-Tact', 'Thunder Lance Tempo', 'Utilizes weather manipulation for powerful lightning strikes.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Cyclone Burst', 'Mirage Tempo', 'Creates illusions using weather effects to confuse opponents.', 3);

    -- Rokushiki Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Soru', 'Geppo', 'Combines speed with aerial movement for enhanced mobility.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Tekkai', 'Kami-e', 'Defense and evasion techniques that complement each other.', 3);

    -- Cyborg Modifications Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Cyborg Modifications', 'Laser Beams', 'Enhances combat capabilities with advanced weaponry.', 4);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Steel Plating', 'Cyborg Modifications', 'Increases defense through enhanced armor.', 4);

    -- Giant Strength Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Giant Strength', 'Natural Strength', 'Both enhance physical power due to size and mass.', 5);

    -- Vinsmoke Germa Technology Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Raid Suits', 'Electrified Combat Suits', 'Both enhance combat abilities with advanced technology.', 4);

    -- Minks' Sulong Form Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Minks'' Sulong Form', 'Enhanced Combat Abilities', 'Amplifies physical capabilities during full moon.', 5);

    -- Seastone Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Seastone', 'Cyborg Modifications', 'Nullifies Devil Fruit powers, making it effective against users.', 5);

    -- Ancient Weapons Connections
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Pluton', 'Poseidon', 'Both are ancient weapons with unique powers and historical significance.', 5);
    INSERT INTO power_connections (power_from, power_to, relationship, power_scale) VALUES ('Poseidon', 'Uranus', 'Ancient weapons with significant historical importance and potential.', 4);
s
    -- Logging the completion of the procedure
    DBMS_OUTPUT.PUT_LINE('Power connections created successfully with power scales.');

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        -- Handle exceptions and log errors
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error occurred while creating power connections: ' || SQLERRM);
END create_power_connections;


CREATE TABLE characters (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    devil_fruit_power VARCHAR2(50),
    devil_fruit_subpower VARCHAR2(50),
    devil_fruit_description VARCHAR2(255),
    haki_power VARCHAR2(50),
    haki_subpower VARCHAR2(50),
    haki_description VARCHAR2(255),
    martial_arts_power VARCHAR2(50),
    martial_arts_subpower VARCHAR2(50),
    martial_arts_description VARCHAR2(255),
    weather_control_power VARCHAR2(50),
    weather_control_subpower VARCHAR2(50),
    weather_control_description VARCHAR2(255),
    rokushiki_power VARCHAR2(50),
    rokushiki_subpower VARCHAR2(50),
    rokushiki_description VARCHAR2(255),
    cyborg_modification_power VARCHAR2(50),
    cyborg_modification_description VARCHAR2(255),
    giant_strength_power VARCHAR2(50),
    giant_strength_description VARCHAR2(255),
    vinsmoke_germa_power VARCHAR2(50),
    vinsmoke_germa_description VARCHAR2(255),
    minks_sulong_power VARCHAR2(50),
    minks_sulong_description VARCHAR2(255),
    seastone_power VARCHAR2(50),
    seastone_description VARCHAR2(255),
    ancient_weapon_power VARCHAR2(50),
    ancient_weapon_description VARCHAR2(255),
    voice_of_all_things_power VARCHAR2(50),
    voice_of_all_things_description VARCHAR2(255),
    history VARCHAR2(4000) -- Character background
);


CREATE OR REPLACE PROCEDURE create_character (
    p_devil_fruit_id IN NUMBER,
    p_haki_id IN NUMBER,
    p_martial_arts_id IN NUMBER,
    p_weather_control_id IN NUMBER,
    p_rokushiki_id IN NUMBER,
    p_cyborg_modification_id IN NUMBER,
    p_giant_strength_id IN NUMBER,
    p_vinsmoke_germa_id IN NUMBER,
    p_minks_sulong_id IN NUMBER,
    p_seastone_id IN NUMBER,
    p_ancient_weapon_id IN NUMBER,
    p_voice_of_all_things_id IN NUMBER,
    o_character_info OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN o_character_info FOR
    SELECT 
        df.power AS devil_fruit_power,
        df.subpower AS devil_fruit_subpower,
        df.description AS devil_fruit_description,
        h.power AS haki_power,
        h.subpower AS haki_subpower,
        h.description AS haki_description,
        ma.power AS martial_arts_power,
        ma.subpower AS martial_arts_subpower,
        ma.description AS martial_arts_description,
        wc.power AS weather_control_power,
        wc.subpower AS weather_control_subpower,
        wc.description AS weather_control_description,
        r.power AS rokushiki_power,
        r.subpower AS rokushiki_subpower,
        r.description AS rokushiki_description,
        cm.power AS cyborg_modification_power,
        cm.description AS cyborg_modification_description,
        gs.power AS giant_strength_power,
        gs.description AS giant_strength_description,
        vg.power AS vinsmoke_germa_power,
        vg.description AS vinsmoke_germa_description,
        ms.power AS minks_sulong_power,
        ms.description AS minks_sulong_description,
        ss.power AS seastone_power,
        ss.description AS seastone_description,
        aw.power AS ancient_weapon_power,
        aw.description AS ancient_weapon_description,
        vat.power AS voice_of_all_things_power,
        vat.description AS voice_of_all_things_description
    FROM 
        devil_fruits df
    JOIN haki h ON h.id = p_haki_id
    JOIN martial_arts ma ON ma.id = p_martial_arts_id
    JOIN weather_control wc ON wc.id = p_weather_control_id
    JOIN rokushiki r ON r.id = p_rokushiki_id
    JOIN cyborg_modifications cm ON cm.id = p_cyborg_modification_id
    JOIN giant_strength gs ON gs.id = p_giant_strength_id
    JOIN vinsmoke_germa vg ON vg.id = p_vinsmoke_germa_id
    JOIN minks_sulong ms ON ms.id = p_minks_sulong_id
    JOIN seastone ss ON ss.id = p_seastone_id
    JOIN ancient_weapons aw ON aw.id = p_ancient_weapon_id
    JOIN voice_of_all_things vat ON vat.id = p_voice_of_all_things_id;
END create_character;

CREATE OR REPLACE PROCEDURE create_character_instance (
    p_devil_fruit_id IN NUMBER,
    p_haki_id IN NUMBER,
    p_martial_arts_id IN NUMBER,
    p_weather_control_id IN NUMBER,
    p_rokushiki_id IN NUMBER,
    p_cyborg_modification_id IN NUMBER,
    p_giant_strength_id IN NUMBER,
    p_vinsmoke_germa_id IN NUMBER,
    p_minks_sulong_id IN NUMBER,
    p_seastone_id IN NUMBER,
    p_ancient_weapon_id IN NUMBER,
    p_voice_of_all_things_id IN NUMBER
) AS
    character_info SYS_REFCURSOR;
    devil_fruit_power VARCHAR2(50);
    devil_fruit_subpower VARCHAR2(50);
    devil_fruit_description VARCHAR2(255);
    haki_power VARCHAR2(50);
    haki_subpower VARCHAR2(50);
    haki_description VARCHAR2(255);
    martial_arts_power VARCHAR2(50);
    martial_arts_subpower VARCHAR2(50);
    martial_arts_description VARCHAR2(255);
    weather_control_power VARCHAR2(50);
    weather_control_subpower VARCHAR2(50);
    weather_control_description VARCHAR2(255);
    rokushiki_power VARCHAR2(50);
    rokushiki_subpower VARCHAR2(50);
    rokushiki_description VARCHAR2(255);
    cyborg_modification_power VARCHAR2(50);
    cyborg_modification_description VARCHAR2(255);
    giant_strength_power VARCHAR2(50);
    giant_strength_description VARCHAR2(255);
    vinsmoke_germa_power VARCHAR2(50);
    vinsmoke_germa_description VARCHAR2(255);
    minks_sulong_power VARCHAR2(50);
    minks_sulong_description VARCHAR2(255);
    seastone_power VARCHAR2(50);
    seastone_description VARCHAR2(255);
    ancient_weapon_power VARCHAR2(50);
    ancient_weapon_description VARCHAR2(255);
    voice_of_all_things_power VARCHAR2(50);
    voice_of_all_things_description VARCHAR2(255);
BEGIN
    create_character(
        p_devil_fruit_id => p_devil_fruit_id,
        p_haki_id => p_haki_id,
        p_martial_arts_id => p_martial_arts_id,
        p_weather_control_id => p_weather_control_id,
        p_rokushiki_id => p_rokushiki_id,
        p_cyborg_modification_id => p_cyborg_modification_id,
        p_giant_strength_id => p_giant_strength_id,
        p_vinsmoke_germa_id => p_vinsmoke_germa_id,
        p_minks_sulong_id => p_minks_sulong_id,
        p_seastone_id => p_seastone_id,
        p_ancient_weapon_id => p_ancient_weapon_id,
        p_voice_of_all_things_id => p_voice_of_all_things_id,
        o_character_info => character_info
    );

    FETCH character_info INTO 
        devil_fruit_power,
        devil_fruit_subpower,
        devil_fruit_description,
        haki_power,
        haki_subpower,
        haki_description,
        martial_arts_power,
        martial_arts_subpower,
        martial_arts_description,
        weather_control_power,
        weather_control_subpower,
        weather_control_description,
        rokushiki_power,
        rokushiki_subpower,
        rokushiki_description,
        cyborg_modification_power,
        cyborg_modification_description,
        giant_strength_power,
        giant_strength_description,
        vinsmoke_germa_power,
        vinsmoke_germa_description,
        minks_sulong_power,
        minks_sulong_description,
        seastone_power,
        seastone_description,
        ancient_weapon_power,
        ancient_weapon_description,
        voice_of_all_things_power,
        voice_of_all_things_description;


    INSERT INTO characters (
        devil_fruit_power,
        devil_fruit_subpower,
        devil_fruit_description,
        haki_power,
        haki_subpower,
        haki_description,
        martial_arts_power,
        martial_arts_subpower,
        martial_arts_description,
        weather_control_power,
        weather_control_subpower,
        weather_control_description,
        rokushiki_power,
        rokushiki_subpower,
        rokushiki_description,
        cyborg_modification_power,
        cyborg_modification_description,
        giant_strength_power,
        giant_strength_description,
        vinsmoke_germa_power,
        vinsmoke_germa_description,
        minks_sulong_power,
        minks_sulong_description,
        seastone_power,
        seastone_description,
        ancient_weapon_power,
        ancient_weapon_description,
        voice_of_all_things_power,
        voice_of_all_things_description
    ) VALUES (
        devil_fruit_power,
        devil_fruit_subpower,
        devil_fruit_description,
        haki_power,
        haki_subpower,
        haki_description,
        martial_arts_power,
        martial_arts_subpower,
        martial_arts_description,
        weather_control_power,
        weather_control_subpower,
        weather_control_description,
        rokushiki_power,
        rokushiki_subpower,
        rokushiki_description,
        cyborg_modification_power,
        cyborg_modification_description,
        giant_strength_power,
        giant_strength_description,
        vinsmoke_germa_power,
        vinsmoke_germa_description,
        minks_sulong_power,
        minks_sulong_description,
        seastone_power,
        seastone_description,
        ancient_weapon_power,
        ancient_weapon_description,
        voice_of_all_things_power,
        voice_of_all_things_description
    );

    CLOSE character_info;
END create_character_instance;

CREATE OR REPLACE FUNCTION get_character_details (
    p_character_id IN NUMBER
) RETURN SYS_REFCURSOR AS
    character_info SYS_REFCURSOR;
BEGIN
    OPEN character_info FOR
    SELECT 
        devil_fruit_power,
        devil_fruit_subpower,
        devil_fruit_description,
        haki_power,
        haki_subpower,
        haki_description,
        martial_arts_power,
        martial_arts_subpower,
        martial_arts_description,
        weather_control_power,
        weather_control_subpower,
        weather_control_description,
        rokushiki_power,
        rokushiki_subpower,
        rokushiki_description,
        cyborg_modification_power,
        cyborg_modification_description,
        giant_strength_power,
        giant_strength_description,
        vinsmoke_germa_power,
        vinsmoke_germa_description,
        minks_sulong_power,
        minks_sulong_description,
        seastone_power,
        seastone_description,
        ancient_weapon_power,
        ancient_weapon_description,
        voice_of_all_things_power,
        voice_of_all_things_description
    FROM characters
    WHERE id = p_character_id;

    RETURN character_info;
END get_character_details;


CREATE OR REPLACE PROCEDURE list_all_characters AS
BEGIN
    FOR rec IN (
        SELECT 
            id,
            devil_fruit_power,
            haki_power,
            martial_arts_power,
            weather_control_power,
            rokushiki_power,
            cyborg_modification_power,
            giant_strength_power,
            vinsmoke_germa_power,
            minks_sulong_power,
            seastone_power,
            ancient_weapon_power,
            voice_of_all_things_power
        FROM characters
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('Character ID: ' || rec.id || 
                             ', Devil Fruit: ' || rec.devil_fruit_power || 
                             ', Haki: ' || rec.haki_power || 
                             ', Martial Arts: ' || rec.martial_arts_power || 
                             ', Weather Control: ' || rec.weather_control_power || 
                             ', Rokushiki: ' || rec.rokushiki_power || 
                             ', Cyborg Modification: ' || rec.cyborg_modification_power || 
                             ', Giant Strength: ' || rec.giant_strength_power || 
                             ', Vinsmoke Germa: ' || rec.vinsmoke_germa_power || 
                             ', Minks Sulong: ' || rec.minks_sulong_power || 
                             ', Seastone: ' || rec.seastone_power || 
                             ', Ancient Weapon: ' || rec.ancient_weapon_power || 
                             ', Voice of All Things: ' || rec.voice_of_all_things_power);
    END LOOP;
END list_all_characters;

CREATE OR REPLACE PROCEDURE list_all_available_powers AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Devil Fruits:');
    FOR rec IN (SELECT DISTINCT power FROM devil_fruits) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Haki:');
    FOR rec IN (SELECT DISTINCT power FROM haki) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Martial Arts:');
    FOR rec IN (SELECT DISTINCT power FROM martial_arts) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Weather Control:');
    FOR rec IN (SELECT DISTINCT power FROM weather_control) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Rokushiki:');
    FOR rec IN (SELECT DISTINCT power FROM rokushiki) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Cyborg Modifications:');
    FOR rec IN (SELECT DISTINCT power FROM cyborg_modifications) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Giant Strength:');
    FOR rec IN (SELECT DISTINCT power FROM giant_strength) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Vinsmoke Germa Technology:');
    FOR rec IN (SELECT DISTINCT power FROM vinsmoke_germa) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Minks Sulong Form:');
    FOR rec IN (SELECT DISTINCT power FROM minks_sulong) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Seastone:');
    FOR rec IN (SELECT DISTINCT power FROM seastone) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Ancient Weapons:');
    FOR rec IN (SELECT DISTINCT power FROM ancient_weapons) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Voice of All Things:');
    FOR rec IN (SELECT DISTINCT power FROM voice_of_all_things) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;
END list_all_available_powers;

CREATE OR REPLACE PROCEDURE list_all_available_powers AS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Devil Fruits:');
    FOR rec IN (SELECT DISTINCT power FROM devil_fruits) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Haki:');
    FOR rec IN (SELECT DISTINCT power FROM haki) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Martial Arts:');
    FOR rec IN (SELECT DISTINCT power FROM martial_arts) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Weather Control:');
    FOR rec IN (SELECT DISTINCT power FROM weather_control) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Rokushiki:');
    FOR rec IN (SELECT DISTINCT power FROM rokushiki) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Cyborg Modifications:');
    FOR rec IN (SELECT DISTINCT power FROM cyborg_modifications) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Giant Strength:');
    FOR rec IN (SELECT DISTINCT power FROM giant_strength) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Vinsmoke Germa Technology:');
    FOR rec IN (SELECT DISTINCT power FROM vinsmoke_germa) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Minks Sulong Form:');
    FOR rec IN (SELECT DISTINCT power FROM minks_sulong) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Seastone:');
    FOR rec IN (SELECT DISTINCT power FROM seastone) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Ancient Weapons:');
    FOR rec IN (SELECT DISTINCT power FROM ancient_weapons) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Voice of All Things:');
    FOR rec IN (SELECT DISTINCT power FROM voice_of_all_things) LOOP
        DBMS_OUTPUT.PUT_LINE('- ' || rec.power);
    END LOOP;
END list_all_available_powers;


CREATE OR REPLACE FUNCTION get_character_history (
    p_character_id IN NUMBER
) RETURN VARCHAR2 AS
    character_history VARCHAR2(4000);
BEGIN
    SELECT history INTO character_history FROM characters WHERE id = p_character_id;

    RETURN character_history;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 'No history found for this character.';
END get_character_history;

CREATE TABLE character_progression_log (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    character_id NUMBER NOT NULL,
    progress_update VARCHAR2(255),
    update_date DATE DEFAULT SYSDATE,
    FOREIGN KEY (character_id) REFERENCES characters(id)
);

CREATE OR REPLACE PROCEDURE track_character_progression (
    p_character_id IN NUMBER,
    p_progress_update IN VARCHAR2
) AS
BEGIN
    INSERT INTO character_progression_log (character_id, progress_update, update_date)
    VALUES (p_character_id, p_progress_update, SYSDATE);
    
    COMMIT;
END track_character_progression;

create a progression log table and a  characters table. Also remove stupid comments
gimme the code from get_character_history below